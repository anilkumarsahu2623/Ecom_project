pipeline {
    agent any
    
    // Add nightly trigger at midnight
    triggers {
        cron('0 0 * * *')  // Runs at 00:00 (midnight) every day
    }
    
    environment {
        DOCKER_IMAGE = "anilkumarsahu2623/ecom_nightlyci"
        DOCKER_REGISTRY_CREDENTIALS = credentials('docker')
        // Add timestamp for nightly builds
        NIGHTLY_TAG = "nightly-${BUILD_TIMESTAMP}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: "https://github.com/anilkumarsahu2623/Ecom_project.git"
            }
        }
        
        stage('Docker Login') {
            steps {
                sh '''
                    # Remove existing Docker credentials
                    rm -rf ~/.docker/config.json || true
                    security delete-generic-password -s "Docker Credentials" || true
                    
                    # Verify Docker is running
                    docker info
                    
                    # Login to Docker Hub
                    echo $DOCKER_REGISTRY_CREDENTIALS_PSW | docker login -u $DOCKER_REGISTRY_CREDENTIALS_USR --password-stdin || {
                        echo "Docker login failed, retrying after cleanup..."
                        docker logout
                        rm -rf ~/.docker/config.json || true
                        echo $DOCKER_REGISTRY_CREDENTIALS_PSW | docker login -u $DOCKER_REGISTRY_CREDENTIALS_USR --password-stdin
                    }
                '''
            }
        }
        
        stage('Docker Build') {
            steps {
                script {
                    try {
                        echo "Building Docker image..."
                        sh """
                            docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} .
                            docker tag ${DOCKER_IMAGE}:${BUILD_NUMBER} ${DOCKER_IMAGE}:latest
                            docker tag ${DOCKER_IMAGE}:${BUILD_NUMBER} ${DOCKER_IMAGE}:${NIGHTLY_TAG}
                        """
                    } catch (Exception e) {
                        echo "Error during Docker build: ${e.getMessage()}"
                        throw e
                    }
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    try {
                        echo "Pushing Docker image to registry..."
                        sh """
                            docker push ${DOCKER_IMAGE}:${BUILD_NUMBER}
                            docker push ${DOCKER_IMAGE}:latest
                            docker push ${DOCKER_IMAGE}:${NIGHTLY_TAG}
                        """
                    } catch (Exception e) {
                        echo "Error during Docker push: ${e.getMessage()}"
                        throw e
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo "Pipeline executed successfully!"
                emailext (
                subject: "Nightly Build Successful: ${currentBuild.fullDisplayName}",
                body: """
                    Nightly Build completed successfully!
                    
                    Build Details:
                    - Build Number: ${BUILD_NUMBER}
                    - Docker Image Tags: 
                      * ${DOCKER_IMAGE}:${BUILD_NUMBER}
                      * ${DOCKER_IMAGE}:latest
                      * ${DOCKER_IMAGE}:${NIGHTLY_TAG}
                    - Build URL: ${env.BUILD_URL}
                    
                    Changes since last build:
                    ${currentBuild.changeSets.size() > 0 ? currentBuild.changeSets : 'No changes'}
                """,
                to: 'anilkumarsahu2623@gmail.com',  // Replace with your email
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
            )
        }
        failure {
            echo "Pipeline failed! Check the logs for details."
                emailext (
                subject: "Nightly Build Failed: ${currentBuild.fullDisplayName}",
                body: """
                    Nightly Build failed!
                    
                    Error Details:
                    - Build Number: ${BUILD_NUMBER}
                    - Build URL: ${env.BUILD_URL}
                    - Console Output: ${env.BUILD_URL}console
                    
                    Please check the build logs for more details.
                """,
                to: 'anilkumarsahu2623@gmail.com',  // Replace with your email
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                attachLog: true
            )
        }
        always {
            sh '''
                # Cleanup
                docker logout || true
                rm -rf ~/.docker/config.json || true
                security delete-generic-password -s "Docker Credentials" || true
            '''
            
            // Clean up Docker images
            sh """
                docker rmi ${DOCKER_IMAGE}:${BUILD_NUMBER} || true
                docker rmi ${DOCKER_IMAGE}:latest || true
                docker rmi ${DOCKER_IMAGE}:${NIGHTLY_TAG} || true
            """
        }
    }
}
